/* Generated by the Nim Compiler v2.3.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671089031 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI671089030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI671089019 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI671089018 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555157 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555161 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555162.node = NNI33555162;
NTI33555164.base = NTI33555161;
NTI33555165.base = NTI33555161;
var NNI33555161 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555161.node = NNI33555161;
var NNI33555157 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555157.node = NNI33555157;
NTI33555161.base = NTI33555157;
NTI33555162.base = NTI33555161;
NTI134217741.base = NTI33555162;
NTI134217743.base = NTI134217741;
var NNI33555826 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555826.node = NNI33555826;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555162;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555162;
NTI671089019.base = NTI33554446;
var NNI671089018 = {kind: 1, offset: "arr", len: 0, typ: NTI671089019, name: "arr", sons: null};
NTI671089018.node = NNI671089018;
NTI671089031.base = NTI33554446;
var NNI671089030 = {kind: 1, offset: "arr", len: 0, typ: NTI671089031, name: "arr", sons: null};
NTI671089030.node = NNI671089030;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555162;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557319 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2867(ti_p2))) {
      result_33557319 = src_p1;
      }
      else {
        result_33557319 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557319 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557319 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557319 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557319 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557319, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557319 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557319 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557319 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557319[i] = nimCopy(result_33557319[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557319 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557319 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557319[i] = nimCopy(result_33557319[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557319 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557319 = src_p1;
      break;
    }

  return result_33557319;

}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function isObj(obj_p0, subclass_p1) {
  var result_33557432 = false;

  BeforeRet: {
    var x_33557433 = obj_p0;
    if ((x_33557433 == subclass_p1)) {
    result_33557432 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557433 == subclass_p1))) break Label2;
          if ((x_33557433 == null)) {
          result_33557432 = false;
          break BeforeRet;
          }
          
          x_33557433 = x_33557433.base;
        }
    };
    result_33557432 = true;
    break BeforeRet;
  };

  return result_33557432;

}

function toJSStr(s_p0) {
  var result_33556908 = null;

    var res_33556962 = newSeq__system_u2505((s_p0).length);
    var i_33556963 = 0;
    var j_33556964 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556963 < (s_p0).length)) break Label2;
          var c_33556965 = s_p0[i_33556963];
          if ((c_33556965 < 128)) {
          res_33556962[j_33556964] = String.fromCharCode(c_33556965);
          i_33556963 += 1;
          }
          else {
            var helper_33556991 = newSeq__system_u2505(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556992 = c_33556965.toString(16);
                  if ((((code_33556992) == null ? 0 : (code_33556992).length) == 1)) {
                  helper_33556991.push("%0");;
                  }
                  else {
                  helper_33556991.push("%");;
                  }
                  
                  helper_33556991.push(code_33556992);;
                  i_33556963 += 1;
                  if ((((s_p0).length <= i_33556963) || (s_p0[i_33556963] < 128))) {
                  break Label3;
                  }
                  
                  c_33556965 = s_p0[i_33556963];
                }
            };
++excHandler;
            try {
            res_33556962[j_33556964] = decodeURIComponent(helper_33556991.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            raiseDefect();
            res_33556962[j_33556964] = helper_33556991.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556964 += 1;
        }
    };
    if (res_33556962.length < j_33556964) { for (var i = res_33556962.length ; i < j_33556964 ; ++i) res_33556962.push(null); }
               else { res_33556962.length = j_33556964; };
    result_33556908 = res_33556962.join("");

  return result_33556908;

}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2169(), NTI33554449);
    throw e_p0;

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557359 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557359 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557359;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557354 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557354 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557354;

}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vmath", prev: framePtr, filename: "/root/.nimble/pkgs2/vmath-2.0.0-c90a664f3425d26219e1262ed9a888b859b3127c/vmath.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module vmath", prev: framePtr, filename: "/root/.nimble/pkgs2/vmath-2.0.0-c90a664f3425d26219e1262ed9a888b859b3127c/vmath.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function len(l_p0) {
  var result_536872082 = 0;

  var F = {procname: "buju.len", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "buju.nim";
    result_536872082 = (l_p0.nodes).length;
  framePtr = F.prev;

  return result_536872082;

}

function clear(l_p0) {
  var F = {procname: "buju.clear", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "buju.nim";
    if (l_p0.nodes.length < 0) { for (var i = l_p0.nodes.length ; i < 0 ; ++i) l_p0.nodes.push(({id: 0, isBreak: false, isSkipXAxis: false, boxFlags: 0, anchorFlags: 0, firstChild: 0, lastChild: 0, prevSibling: 0, nextSibling: 0, margin: ({arr: new Float32Array(4)}), size: ({arr: new Float32Array(2)}), computed: ({arr: new Float32Array(4)})})); }
               else { l_p0.nodes.length = 0; };
  framePtr = F.prev;

  
}

function isFatPointer__system_u2867(ti_p0) {
  var result_33557301 = false;

  BeforeRet: {
    result_33557301 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557301;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function add__system_u1934(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function auxWriteStackTrace__system_u2076(f_p0) {
  var result_33556510 = [[]];

    var it_33556515 = f_p0;
    var i_33556516 = 0;
    var total_33556517 = 0;
    var tempFrames_33556518 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555826);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556515 == null)) && (i_33556516 <= 63))) break Label2;
          tempFrames_33556518[i_33556516].Field0 = it_33556515.procname;
          tempFrames_33556518[i_33556516].Field1 = it_33556515.line;
          tempFrames_33556518[i_33556516].Field2 = it_33556515.filename;
          i_33556516 += 1;
          total_33556517 += 1;
          it_33556515 = it_33556515.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556515 == null))) break Label4;
          total_33556517 += 1;
          it_33556515 = it_33556515.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556517 == i_33556516))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24__systemZdollars_u14((total_33556517 - i_33556516)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556551 = 0;
      var colontmp__536872426 = 0;
      colontmp__536872426 = (i_33556516 - 1);
      var res_536872428 = colontmp__536872426;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536872428)) break Label7;
            j_33556551 = res_536872428;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556518[j_33556551].Field2));;
            if ((0 < tempFrames_33556518[j_33556551].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556510, 0, tempFrames_33556518[j_33556551].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add__system_u1934(result_33556510, 0, tempFrames_33556518[j_33556551].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_536872428 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace__system_u2169() {
  var result_33556602 = [];

    if (!((framePtr == null))) {
    result_33556602 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2076(framePtr)), NTI33554449);
    }
    else {
      result_33556602 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556602;

}

function newSeq__system_u2505(len_p0) {
  var result_33556941 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 651;
    F.filename = "system.nim";
    result_33556941 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556941[i] = null; }  framePtr = F.prev;

  return result_33556941;

}

function isNimException__system_u2009() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556444 = null;

    if (isNimException__system_u2009()) {
    result_33556444 = lastJSError;
    }
    

  return result_33556444;

}

function raiseDefect() {
    if (isNimException__system_u2009()) {
    var e_33556653 = getCurrentException();
    if (isObj(e_33556653.m_type, NTI33555162)) {
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace__system_u2169(), NTI33554449);
    throw e_33556653;
    }
    
    }
    

  
}

function unhandledException(e_p0) {
    var buf_33556647 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556647[0].push.apply(buf_33556647[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556647[0].push.apply(buf_33556647[0], e_p0.message);;
    }
    else {
    buf_33556647[0].push.apply(buf_33556647[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556647[0].push.apply(buf_33556647[0], [32,91]);;
    add__system_u1934(buf_33556647, 0, e_p0.name);
    buf_33556647[0].push.apply(buf_33556647[0], [93,10]);;
    buf_33556647[0].push.apply(buf_33556647[0], rawWriteStackTrace__system_u2169());;
    var cbuf_33556648 = toJSStr(buf_33556647[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556648);
  }
  else {
    throw cbuf_33556648;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536872421 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_536872421 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_536872421;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536872421 = addInt(i_536872421, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u14(xHEX60gensym0_p0) {
  var result_369098768 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "dollars.nim";
    result_369098768[0] = nimCopy(null, [], NTI33554449);
    F.line = 21;
    addInt__stdZprivateZdigitsutils_u241(result_369098768, 0, xHEX60gensym0_p0);
  framePtr = F.prev;

  return result_369098768[0];

}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u14(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u14(a_p1),[32,46,46,32],HEX24__systemZdollars_u14(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function node__buju_u100(l_p0, id_p1) {
  var result_536871015 = null;

  var F = {procname: "buju.node", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "core.nim";
    result_536871015 = l_p0.nodes[chckIndx(((id_p1 - 1) >>> 0), 0, (l_p0.nodes).length - 1)];
  framePtr = F.prev;

  return result_536871015;

}

function firstChild(l_p0, nodeID_p1) {
  var result_536872147 = 0;

  var F = {procname: "buju.firstChild", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 37;
    F.filename = "buju.nim";
    var l_536872161 = l_p0;
    F.line = 38;
    var n_536872162 = node__buju_u100(l_536872161, nodeID_p1);
    if (!((n_536872162 == null))) {
    F.line = 41;
    result_536872147 = n_536872162.firstChild;
    break BeforeRet;
    }
    
    F.line = 42;
    result_536872147 = 0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872147;

}

function lastChild(l_p0, nodeID_p1) {
  var result_536872169 = 0;

  var F = {procname: "buju.lastChild", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 49;
    F.filename = "buju.nim";
    var l_536872182 = l_p0;
    F.line = 50;
    var n_536872183 = node__buju_u100(l_536872182, nodeID_p1);
    if (!((n_536872183 == null))) {
    F.line = 53;
    result_536872169 = n_536872183.lastChild;
    break BeforeRet;
    }
    
    F.line = 54;
    result_536872169 = 0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872169;

}

function nextSibling(l_p0, nodeID_p1) {
  var result_536872190 = 0;

  var F = {procname: "buju.nextSibling", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 63;
    F.filename = "buju.nim";
    var l_536872203 = l_p0;
    F.line = 64;
    var n_536872204 = node__buju_u100(l_536872203, nodeID_p1);
    if (!((n_536872204 == null))) {
    F.line = 67;
    result_536872190 = n_536872204.nextSibling;
    break BeforeRet;
    }
    
    F.line = 68;
    result_536872190 = 0;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536872190;

}

function node(l_p0) {
    var Temporary1;

  var result_536872228 = 0;

  var F = {procname: "buju.node", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 89;
    F.filename = "buju.nim";
    F.line = 93;
    var l_536872241 = l_p0;
    F.line = 94;
    var offset_536872245 = (l_536872241.nodes).length;
    F.line = 96;
    if (l_536872241.nodes.length < (Temporary1 = chckRange(addInt(offset_536872245, 1), 0, 2147483647), Temporary1)) { for (var i = l_536872241.nodes.length ; i < Temporary1 ; ++i) l_536872241.nodes.push(({id: 0, isBreak: false, isSkipXAxis: false, boxFlags: 0, anchorFlags: 0, firstChild: 0, lastChild: 0, prevSibling: 0, nextSibling: 0, margin: ({arr: new Float32Array(4)}), size: ({arr: new Float32Array(2)}), computed: ({arr: new Float32Array(4)})})); }
               else { l_536872241.nodes.length = Temporary1; };
    F.line = 98;
    var id_536872253 = (l_536872241.nodes).length;
    F.line = 99;
    l_536872241.nodes[chckIndx(offset_536872245, 0, (l_536872241.nodes).length - 1)].id = id_536872253;
    result_536872228 = id_536872253;
  framePtr = F.prev;

  return result_536872228;

}

function setBoxFlags(l_p0, nodeID_p1, boxFlags_p2) {
  var F = {procname: "buju.setBoxFlags", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "buju.nim";
    var l_536872270 = l_p0;
    F.line = 112;
    var n_536872271 = node__buju_u100(l_536872270, nodeID_p1);
    F.line = 114;
    n_536872271.boxFlags = Number(BigInt.asUintN(8, BigInt(boxFlags_p2)));
  framePtr = F.prev;

  
}

function setLayoutFlags(l_p0, nodeID_p1, layoutFlags_p2) {
  var F = {procname: "buju.setLayoutFlags", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 124;
    F.filename = "buju.nim";
    var l_536872288 = l_p0;
    F.line = 125;
    var n_536872289 = node__buju_u100(l_536872288, nodeID_p1);
    F.line = 127;
    n_536872289.anchorFlags = Number(BigInt.asUintN(8, BigInt(layoutFlags_p2)));
  framePtr = F.prev;

  
}

function setSize(l_p0, nodeID_p1, size_p2) {
  var F = {procname: "buju.setSize", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 135;
    F.filename = "buju.nim";
    var l_536872306 = l_p0;
    F.line = 136;
    var n_536872307 = node__buju_u100(l_536872306, nodeID_p1);
    F.line = 138;
    n_536872307.size = nimCopy(n_536872307.size, size_p2, NTI671089018);
  framePtr = F.prev;

  
}

function setMargin(l_p0, nodeID_p1, margin_p2) {
  var F = {procname: "buju.setMargin", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 148;
    F.filename = "buju.nim";
    var l_536872324 = l_p0;
    F.line = 149;
    var n_536872325 = node__buju_u100(l_536872324, nodeID_p1);
    F.line = 151;
    n_536872325.margin = nimCopy(n_536872325.margin, margin_p2, NTI671089030);
  framePtr = F.prev;

  
}

function isNil__buju_u93(id_p0) {
  var result_536871007 = false;

  var F = {procname: "buju.isNil", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 78;
    F.filename = "core.nim";
    result_536871007 = (id_p0 == 0);
  framePtr = F.prev;

  return result_536871007;

}

function lastChild__buju_u136(l_p0, n_p1) {
  var result_536871051 = null;

  var F = {procname: "buju.lastChild", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 107;
    F.filename = "core.nim";
    var nodeID_536871052 = n_p1.lastChild;
    if (!(isNil__buju_u93(nodeID_536871052))) {
    F.line = 109;
    result_536871051 = node__buju_u100(l_p0, nodeID_536871052);
    break BeforeRet;
    }
    
    F.line = 110;
    result_536871051 = null;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_536871051;

}

function insertChild(l_p0, parentID_p1, childID_p2) {
  var F = {procname: "buju.insertChild", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 161;
    F.filename = "buju.nim";
    var l_536872342 = l_p0;
    F.line = 162;
    var p_536872343 = node__buju_u100(l_536872342, parentID_p1);
    if (!(isNil__buju_u93(p_536872343.lastChild))) {
    F.line = 165;
    var lastChild_536872344 = lastChild__buju_u136(l_536872342, p_536872343);
    F.line = 166;
    lastChild_536872344.nextSibling = childID_p2;
    F.line = 168;
    var node_536872345 = node__buju_u100(l_536872342, childID_p2);
    F.line = 169;
    node_536872345.prevSibling = p_536872343.lastChild;
    F.line = 170;
    p_536872343.lastChild = childID_p2;
    }
    else {
      F.line = 172;
      p_536872343.firstChild = childID_p2;
      F.line = 173;
      p_536872343.lastChild = childID_p2;
    }
    
  framePtr = F.prev;

  
}

function removeChild(l_p0, parentID_p1, childID_p2) {
  var F = {procname: "buju.removeChild", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 181;
    F.filename = "buju.nim";
    var l_536872362 = l_p0;
    F.line = 182;
    var c_536872363 = node__buju_u100(l_536872362, childID_p2);
    F.line = 183;
    var p_536872364 = node__buju_u100(l_536872362, parentID_p1);
    F.line = 186;
    var p2_536872365 = c_536872363.prevSibling;
    F.line = 187;
    var n2_536872366 = c_536872363.nextSibling;
    if ((n2_536872366 == p2_536872365)) {
    if (!(isNil__buju_u93(n2_536872366))) {
    F.line = 191;
    c_536872363.prevSibling = 0;
    F.line = 192;
    c_536872363.nextSibling = 0;
    F.line = 194;
    var n_536872371 = node__buju_u100(l_536872362, n2_536872366);
    F.line = 195;
    n_536872371.prevSibling = 0;
    F.line = 196;
    n_536872371.nextSibling = 0;
    }
    
    F.line = 198;
    p_536872364.lastChild = 0;
    F.line = 199;
    p_536872364.firstChild = 0;
    F.line = 200;
    break BeforeRet;
    }
    
    if ((p_536872364.firstChild == childID_p2)) {
    F.line = 203;
    p_536872364.firstChild = n2_536872366;
    }
    
    if ((p_536872364.lastChild == childID_p2)) {
    F.line = 206;
    p_536872364.lastChild = p2_536872365;
    }
    
    if (!(isNil__buju_u93(n2_536872366))) {
    F.line = 209;
    var n_536872380 = node__buju_u100(l_536872362, n2_536872366);
    F.line = 210;
    n_536872380.prevSibling = p2_536872365;
    F.line = 211;
    c_536872363.nextSibling = 0;
    }
    
    if (!(isNil__buju_u93(p2_536872365))) {
    F.line = 214;
    var n_536872381 = node__buju_u100(l_536872362, p2_536872365);
    F.line = 215;
    n_536872381.nextSibling = n2_536872366;
    F.line = 216;
    c_536872363.prevSibling = 0;
    }
    
  };
  framePtr = F.prev;

  
}

function model__buju_u120(n_p0) {
  var result_536871034 = 0;

  var F = {procname: "buju.model", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 86;
    F.filename = "core.nim";
    result_536871034 = (((n_p0.boxFlags & 7)) | 0);
  framePtr = F.prev;

  return result_536871034;

}

function max__system_u1192(x_p0, y_p1) {
    var Temporary1;

  var result_33555627 = 0.0;

    if (((y_p1 <= x_p0) || !((y_p1 == y_p1)))) {
    Temporary1 = x_p0;
    }
    else {
    Temporary1 = y_p1;
    }
    
    result_33555627 = Temporary1;

  return result_33555627;

}

function calcOverlayedSize__buju_u354(l_p0, c_p1) {
  var result_536871271 = 0.0;

  var F = {procname: "calcOverlayedSize.calcOverlayedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 145;
    F.filename = "core.nim";
    F.line = 147;
    var needSize_536871273 = 0.0;
    Label1: {
      F.line = 149;
      var idx_536871274 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872442 = 0;
      F.line = 149;
      F.filename = "core.nim";
      colontmp__536872442 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872444 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872444 < colontmp__536872442)) break Label3;
            F.line = 149;
            F.filename = "core.nim";
            idx_536871274 = res_536872444;
            F.line = 150;
            var child_536871275 = l_p0.caches[chckIndx(idx_536871274, 0, (l_p0.caches).length - 1)].node;
            F.line = 151;
            var size_536871279 = ((child_536871275.computed.arr[chckIndx(0, 0, (child_536871275.computed.arr).length - 1)] + child_536871275.computed.arr[chckIndx(2, 0, (child_536871275.computed.arr).length - 1)]) + child_536871275.margin.arr[chckIndx(2, 0, (child_536871275.margin.arr).length - 1)]);
            F.line = 152;
            needSize_536871273 = max__system_u1192(size_536871279, needSize_536871273);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872444 = ((res_536872444 + 1) >>> 0);
          }
      };
    };
    result_536871271 = needSize_536871273;
  framePtr = F.prev;

  return result_536871271;

}

function calcWrappedStackedSize__buju_u368(l_p0, c_p1) {
  var result_536871285 = 0.0;

  var F = {procname: "calcWrappedStackedSize.calcWrappedStackedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 175;
    F.filename = "core.nim";
    F.line = 177;
    var needSize_536871287 = 0.0;
    F.line = 178;
    var needSize2_536871288 = 0.0;
    Label1: {
      F.line = 180;
      var idx_536871289 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872447 = 0;
      F.line = 180;
      F.filename = "core.nim";
      colontmp__536872447 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872448 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872448 < colontmp__536872447)) break Label3;
            F.line = 180;
            F.filename = "core.nim";
            idx_536871289 = res_536872448;
            F.line = 181;
            var child_536871290 = l_p0.caches[chckIndx(idx_536871289, 0, (l_p0.caches).length - 1)].node;
            if (child_536871290.isBreak) {
            F.line = 183;
            needSize2_536871288 = max__system_u1192(needSize2_536871288, needSize_536871287);
            F.line = 184;
            needSize_536871287 = 0.0;
            }
            
            F.line = 185;
            var size_536871294 = ((child_536871290.computed.arr[chckIndx(0, 0, (child_536871290.computed.arr).length - 1)] + child_536871290.computed.arr[chckIndx(2, 0, (child_536871290.computed.arr).length - 1)]) + child_536871290.margin.arr[chckIndx(2, 0, (child_536871290.margin.arr).length - 1)]);
            F.line = 186;
            needSize_536871287 = (needSize_536871287 + size_536871294);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872448 = ((res_536872448 + 1) >>> 0);
          }
      };
    };
    result_536871285 = max__system_u1192(needSize2_536871288, needSize_536871287);
  framePtr = F.prev;

  return result_536871285;

}

function direction__buju_u123(n_p0) {
  var result_536871037 = 0;

  var F = {procname: "buju.direction", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 89;
    F.filename = "core.nim";
    result_536871037 = (((n_p0.boxFlags & 1)) | 0);
  framePtr = F.prev;

  return result_536871037;

}

function calcStackedSize__buju_u383(l_p0, c_p1) {
  var result_536871300 = 0.0;

  var F = {procname: "calcStackedSize.calcStackedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 132;
    F.filename = "core.nim";
    F.line = 134;
    var needSize_536871302 = 0.0;
    Label1: {
      F.line = 136;
      var idx_536871303 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872451 = 0;
      F.line = 136;
      F.filename = "core.nim";
      colontmp__536872451 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872452 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872452 < colontmp__536872451)) break Label3;
            F.line = 136;
            F.filename = "core.nim";
            idx_536871303 = res_536872452;
            F.line = 137;
            var child_536871304 = l_p0.caches[chckIndx(idx_536871303, 0, (l_p0.caches).length - 1)].node;
            F.line = 138;
            var size_536871308 = ((child_536871304.computed.arr[chckIndx(0, 0, (child_536871304.computed.arr).length - 1)] + child_536871304.computed.arr[chckIndx(2, 0, (child_536871304.computed.arr).length - 1)]) + child_536871304.margin.arr[chckIndx(2, 0, (child_536871304.margin.arr).length - 1)]);
            F.line = 139;
            needSize_536871302 = (needSize_536871302 + size_536871308);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872452 = ((res_536872452 + 1) >>> 0);
          }
      };
    };
    result_536871300 = needSize_536871302;
  framePtr = F.prev;

  return result_536871300;

}

function calcSize__buju_u329(l_p0) {
            var Temporary4;
              var Temporary5;

  var F = {procname: "calcSize.calcSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 194;
    F.filename = "core.nim";
    var idx_536871249 = (l_p0.caches).length;
    Label1: {
      F.line = 195;
        Label2: while (true) {
        if (!(0 < idx_536871249)) break Label2;
          Label3: {
            F.line = 196;
            idx_536871249 = subInt(idx_536871249, 1);
            F.line = 198;
            var c_536871259 = l_p0.caches[chckIndx(idx_536871249, 0, (l_p0.caches).length - 1)];
            F.line = 199;
            var n_536871260 = c_536871259.node;
            F.line = 202;
            n_536871260.computed.arr[chckIndx(0, 0, (n_536871260.computed.arr).length - 1)] = n_536871260.margin.arr[chckIndx(0, 0, (n_536871260.margin.arr).length - 1)];
            if ((0.0 < n_536871260.size.arr[chckIndx(0, 0, (n_536871260.size.arr).length - 1)])) {
            F.line = 207;
            n_536871260.computed.arr[chckIndx(2, 0, (n_536871260.computed.arr).length - 1)] = n_536871260.size.arr[chckIndx(0, 0, (n_536871260.size.arr).length - 1)];
            F.line = 208;
            break Label3;
            }
            
            F.line = 211;
            F.line = 212;
            if (            model__buju_u120(n_536871260) == 7            ){              Temporary4 = calcOverlayedSize__buju_u354(l_p0, c_536871259);
              }
            else if (            model__buju_u120(n_536871260) == 6            ){              Temporary4 = calcWrappedStackedSize__buju_u368(l_p0, c_536871259);
              }
            else if (            model__buju_u120(n_536871260) == 3 || 
            model__buju_u120(n_536871260) == 2            ){              if ((direction__buju_u123(n_536871260) == 0)) {
              Temporary5 = calcStackedSize__buju_u383(l_p0, c_536871259);
              }
              else {
              Temporary5 = calcOverlayedSize__buju_u354(l_p0, c_536871259);
              }
              
              Temporary4 = Temporary5;
              }
            else{
              Temporary4 = calcOverlayedSize__buju_u354(l_p0, c_536871259);
              }
            var needSize_536871319 = Temporary4;
            F.line = 237;
            n_536871260.computed.arr[chckIndx(2, 0, (n_536871260.computed.arr).length - 1)] = needSize_536871319;
          };
        }
    };
  framePtr = F.prev;

  
}

function sysFatal__stdZassertions_u41(message_p1) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert__stdZassertions_u39(msg_p0) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal__stdZassertions_u41(msg_p0);
  framePtr = F.prev;

  
}

function failedAssertImpl__stdZassertions_u81(msg_p0) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert__stdZassertions_u39(msg_p0);
  framePtr = F.prev;

  
}

function axisAnchorFlags__buju_u486(n_p0) {
  var result_536871402 = 0;

  var F = {procname: "axisAnchorFlags.axisAnchorFlags", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "core.nim";
    result_536871402 = (((((n_p0.anchorFlags & 31)) | 0) >> 1) & 5);
  framePtr = F.prev;

  return result_536871402;

}

function HEX2BHEX3D__buju_u523(x_p0, x_p0_Idx, y_p1) {
  var F = {procname: "+=.+=", prev: framePtr, filename: "/root/.choosenim/toolchains/nim-#devel/lib/system/arithmetics.nim", line: 0};
  framePtr = F;
    F.line = 330;
    F.filename = "arithmetics.nim";
    x_p0[x_p0_Idx] = (x_p0[x_p0_Idx] + y_p1);
  framePtr = F.prev;

  
}

function min__system_u1159(x_p0, y_p1) {
    var Temporary1;

  var result_33555594 = 0.0;

    if (((x_p0 <= y_p1) || !((y_p1 == y_p1)))) {
    Temporary1 = x_p0;
    }
    else {
    Temporary1 = y_p1;
    }
    
    result_33555594 = Temporary1;

  return result_33555594;

}

function arrangeStacked__buju_u454(l_p0, c_p1) {
  var F = {procname: "arrangeStacked.arrangeStacked", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "core.nim";
    var n_536871374 = c_p1.node;
    F.line = 246;
    var computed_536871375 = nimCopy(null, n_536871374.computed, NTI671089030);
    F.line = 247;
    var space_536871377 = computed_536871375.arr[chckIndx(3, 0, (computed_536871375.arr).length - 1)];
    F.line = 249;
    var arrangeRangeBegin_536871378 = c_p1.childOffset;
    F.line = 250;
    var arrangeRangeEnd_536871379 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
    F.line = 253;
    var maxX2_536871381 = (computed_536871375.arr[chckIndx(1, 0, (computed_536871375.arr).length - 1)] + space_536871377);
    Label1: {
      F.line = 255;
        Label2: while (true) {
        if (!!((arrangeRangeBegin_536871378 == arrangeRangeEnd_536871379))) break Label2;
          F.line = 256;
          var used_536871382 = 0.0;
          F.line = 259;
          var count_536871383 = 0;
          F.line = 262;
          var squeezedCount_536871384 = 0;
          F.line = 263;
          var total_536871385 = 0;
          F.line = 264;
          var itemCount_536871386 = 0;
          F.line = 266;
          var expandRangeEnd_536871387 = arrangeRangeEnd_536871379;
          Label3: {
            F.line = 269;
            var idx_536871388 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872460 = arrangeRangeBegin_536871378;
            Label4: {
              F.line = 138;
                Label5: while (true) {
                if (!(res_536872460 < arrangeRangeEnd_536871379)) break Label5;
                  F.line = 269;
                  F.filename = "core.nim";
                  idx_536871388 = res_536872460;
                  F.line = 270;
                  var child_536871389 = l_p0.caches[chckIndx(idx_536871388, 0, (l_p0.caches).length - 1)].node;
                  F.line = 272;
                  itemCount_536871386 = addInt(itemCount_536871386, 1);
                  F.line = 273;
                  var extend_536871397 = ((used_536871382 + child_536871389.computed.arr[chckIndx(1, 0, (child_536871389.computed.arr).length - 1)]) + child_536871389.margin.arr[chckIndx(3, 0, (child_536871389.margin.arr).length - 1)]);
                  if ((axisAnchorFlags__buju_u486(child_536871389) == 5)) {
                  F.line = 276;
                  count_536871383 = addInt(count_536871383, 1);
                  }
                  else {
                    if ((child_536871389.size.arr[chckIndx(1, 0, (child_536871389.size.arr).length - 1)] <= 0.0)) {
                    F.line = 279;
                    squeezedCount_536871384 = addInt(squeezedCount_536871384, 1);
                    }
                    
                    F.line = 280;
                    extend_536871397 = (extend_536871397 + child_536871389.computed.arr[chckIndx(3, 0, (child_536871389.computed.arr).length - 1)]);
                  }
                  
                  if (((0 < total_536871385) && (space_536871377 < extend_536871397))) {
                  F.line = 285;
                  expandRangeEnd_536871387 = idx_536871388;
                  F.line = 288;
                  child_536871389.isBreak = true;
                  F.line = 289;
                  itemCount_536871386 = 0;
                  F.line = 290;
                  break Label3;
                  }
                  
                  F.line = 292;
                  total_536871385 = addInt(total_536871385, 1);
                  F.line = 293;
                  used_536871382 = extend_536871397;
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872460 = ((res_536872460 + 1) >>> 0);
                }
            };
          };
          F.line = 295;
          F.filename = "core.nim";
          var extraSpace_536871424 = (space_536871377 - used_536871382);
          F.line = 296;
          var filler_536871425 = 0.0;
          F.line = 297;
          var spacer_536871426 = 0.0;
          F.line = 298;
          var extraMargin_536871427 = 0.0;
          F.line = 299;
          var eater_536871428 = 0.0;
          if ((0.0 < extraSpace_536871424)) {
          if ((0 < count_536871383)) {
          F.line = 303;
          filler_536871425 = (extraSpace_536871424 / count_536871383);
          }
          else {
          if ((0 < total_536871385)) {
          F.line = 305;
          if (          (n_536871374.boxFlags & 24) == 24          ){            if ((false || ((0 < itemCount_536871386) || !((expandRangeEnd_536871387 == arrangeRangeEnd_536871379))))) {
            F.line = 309;
            if (            (n_536871374.boxFlags & 120) == 56            ){              F.line = 311;
              spacer_536871426 = (extraSpace_536871424 / total_536871385);
              F.line = 312;
              extraMargin_536871427 = (spacer_536871426 / 2.0);
              }
            else if (            (n_536871374.boxFlags & 120) == 88            ){              F.line = 314;
              spacer_536871426 = (extraSpace_536871424 / addInt(total_536871385, 1));
              F.line = 315;
              extraMargin_536871427 = spacer_536871426;
              }
            else{
              F.line = 318;
              spacer_536871426 = (extraSpace_536871424 / subInt(total_536871385, 1));
              }
            }
            
            }
          else if (          (n_536871374.boxFlags & 24) == 8          ){            }
          else if (          (n_536871374.boxFlags & 24) == 16          ){            F.line = 322;
            extraMargin_536871427 = extraSpace_536871424;
            }
          else{
            F.line = 324;
            extraMargin_536871427 = (extraSpace_536871424 / 2.0);
            }
          }
          }
          }
          else {
          }
          
          F.line = 331;
          var x_536871430 = [computed_536871375.arr[chckIndx(1, 0, (computed_536871375.arr).length - 1)]];
          F.line = 332;
          var x1_536871431 = 0.0;
          Label6: {
            F.line = 335;
            var idx_536871432 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872463 = arrangeRangeBegin_536871378;
            Label7: {
              F.line = 138;
                Label8: while (true) {
                if (!(res_536872463 < expandRangeEnd_536871387)) break Label8;
                  F.line = 335;
                  F.filename = "core.nim";
                  idx_536871432 = res_536872463;
                  F.line = 336;
                  var child_536871433 = l_p0.caches[chckIndx(idx_536871432, 0, (l_p0.caches).length - 1)].node;
                  F.line = 338;
                  HEX2BHEX3D__buju_u523(x_536871430, 0, (child_536871433.computed.arr[chckIndx(1, 0, (child_536871433.computed.arr).length - 1)] + extraMargin_536871427));
                  if ((axisAnchorFlags__buju_u486(child_536871433) == 5)) {
                  F.line = 341;
                  x1_536871431 = (x_536871430[0] + filler_536871425);
                  }
                  else {
                  if ((0.0 < child_536871433.size.arr[chckIndx(1, 0, (child_536871433.size.arr).length - 1)])) {
                  F.line = 343;
                  x1_536871431 = (x_536871430[0] + child_536871433.computed.arr[chckIndx(3, 0, (child_536871433.computed.arr).length - 1)]);
                  }
                  else {
                    F.line = 346;
                    x1_536871431 = (x_536871430[0] + max__system_u1192(0.0, (child_536871433.computed.arr[chckIndx(3, 0, (child_536871433.computed.arr).length - 1)] + eater_536871428)));
                  }
                  }
                  F.line = 348;
                  var ix0_536871446 = x_536871430[0];
                  F.line = 349;
                  var ix1_536871448 = min__system_u1159((maxX2_536871381 - child_536871433.margin.arr[chckIndx(3, 0, (child_536871433.margin.arr).length - 1)]), x1_536871431);
                  F.line = 355;
                  child_536871433.computed.arr[chckIndx(1, 0, (child_536871433.computed.arr).length - 1)] = ix0_536871446;
                  F.line = 356;
                  child_536871433.computed.arr[chckIndx(3, 0, (child_536871433.computed.arr).length - 1)] = (ix1_536871448 - ix0_536871446);
                  F.line = 358;
                  extraMargin_536871427 = spacer_536871426;
                  F.line = 359;
                  x_536871430[0] = (x1_536871431 + child_536871433.margin.arr[chckIndx(3, 0, (child_536871433.margin.arr).length - 1)]);
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872463 = ((res_536872463 + 1) >>> 0);
                }
            };
          };
          F.line = 361;
          F.filename = "core.nim";
          arrangeRangeBegin_536871378 = expandRangeEnd_536871387;
        }
    };
  framePtr = F.prev;

  
}

function max__system_u1196(x_p0, y_p1) {
    var Temporary1;

  var result_33555631 = 0.0;

    if (((y_p1 <= x_p0) || !((y_p1 == y_p1)))) {
    Temporary1 = x_p0;
    }
    else {
    Temporary1 = y_p1;
    }
    
    result_33555631 = Temporary1;

  return result_33555631;

}

function axisAnchorFlags__buju_u568(n_p0) {
  var result_536871484 = 0;

  var F = {procname: "axisAnchorFlags.axisAnchorFlags", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "core.nim";
    result_536871484 = (((((n_p0.anchorFlags & 31)) | 0) >> 0) & 5);
  framePtr = F.prev;

  return result_536871484;

}

function min__system_u1163(x_p0, y_p1) {
    var Temporary1;

  var result_33555598 = 0.0;

    if (((x_p0 <= y_p1) || !((y_p1 == y_p1)))) {
    Temporary1 = x_p0;
    }
    else {
    Temporary1 = y_p1;
    }
    
    result_33555598 = Temporary1;

  return result_33555598;

}

function arrangeOverlaySqueezedRange__buju_u554(l_p0, squeezedRangeBegin_p2, arrangeRangeEnd_p3, offset_p4, space_p5) {
  var F = {procname: "arrangeOverlaySqueezedRange.arrangeOverlaySqueezedRange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 397;
      F.filename = "core.nim";
      var idx_536871475 = 0;
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872470 = squeezedRangeBegin_p2;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872470 < arrangeRangeEnd_p3)) break Label3;
            F.line = 397;
            F.filename = "core.nim";
            idx_536871475 = res_536872470;
            F.line = 398;
            var child_536871476 = l_p0.caches[chckIndx(idx_536871475, 0, (l_p0.caches).length - 1)].node;
            F.line = 399;
            var minSize_536871479 = max__system_u1196(0.0, ((space_p5 - child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)]) - child_536871476.margin.arr[chckIndx(2, 0, (child_536871476.margin.arr).length - 1)]));
            F.line = 400;
            if (            axisAnchorFlags__buju_u568(child_536871476) == 5            ){              F.line = 402;
              child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)] = minSize_536871479;
              }
            else if (            axisAnchorFlags__buju_u568(child_536871476) == 1            ){              F.line = 404;
              child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)] = min__system_u1163(child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)], minSize_536871479);
              }
            else if (            axisAnchorFlags__buju_u568(child_536871476) == 4            ){              F.line = 406;
              child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)] = min__system_u1163(child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)], minSize_536871479);
              F.line = 407;
              child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)] = ((space_p5 - child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)]) - child_536871476.margin.arr[chckIndx(2, 0, (child_536871476.margin.arr).length - 1)]);
              }
            else{
              F.line = 409;
              child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)] = min__system_u1163(child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)], minSize_536871479);
              F.line = 411;
              child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)] = (child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)] + max__system_u1196(0.0, (((space_p5 - child_536871476.computed.arr[chckIndx(2, 0, (child_536871476.computed.arr).length - 1)]) / 2.0) - child_536871476.margin.arr[chckIndx(2, 0, (child_536871476.margin.arr).length - 1)])));
              }
            F.line = 413;
            child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)] = (child_536871476.computed.arr[chckIndx(0, 0, (child_536871476.computed.arr).length - 1)] + offset_p4);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872470 = ((res_536872470 + 1) >>> 0);
          }
      };
    };
  framePtr = F.prev;

  
}

function arrangeWrappedOverlaySqueezed__buju_u540(l_p0, c_p1) {
  var result_536871457 = 0.0;

  var F = {procname: "arrangeWrappedOverlaySqueezed.arrangeWrappedOverlaySqueezed", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "core.nim";
    F.line = 420;
    var n_536871459 = c_p1.node;
    F.line = 422;
    var offset_536871461 = n_536871459.computed.arr[chckIndx(0, 0, (n_536871459.computed.arr).length - 1)];
    F.line = 423;
    var needSize_536871462 = 0.0;
    F.line = 425;
    var squeezedRangeBegin_536871463 = c_p1.childOffset;
    Label1: {
      F.line = 427;
      var idx_536871464 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872466 = 0;
      F.line = 427;
      F.filename = "core.nim";
      colontmp__536872466 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872467 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872467 < colontmp__536872466)) break Label3;
            F.line = 427;
            F.filename = "core.nim";
            idx_536871464 = res_536872467;
            F.line = 428;
            var child_536871465 = l_p0.caches[chckIndx(idx_536871464, 0, (l_p0.caches).length - 1)].node;
            if (child_536871465.isBreak) {
            F.line = 430;
            arrangeOverlaySqueezedRange__buju_u554(l_p0, squeezedRangeBegin_536871463, idx_536871464, offset_536871461, needSize_536871462);
            F.line = 431;
            offset_536871461 = (offset_536871461 + needSize_536871462);
            F.line = 432;
            squeezedRangeBegin_536871463 = idx_536871464;
            F.line = 433;
            needSize_536871462 = 0.0;
            }
            
            F.line = 435;
            var childSize_536871508 = ((child_536871465.computed.arr[chckIndx(0, 0, (child_536871465.computed.arr).length - 1)] + child_536871465.computed.arr[chckIndx(2, 0, (child_536871465.computed.arr).length - 1)]) + child_536871465.margin.arr[chckIndx(2, 0, (child_536871465.margin.arr).length - 1)]);
            F.line = 436;
            needSize_536871462 = max__system_u1192(needSize_536871462, childSize_536871508);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872467 = ((res_536872467 + 1) >>> 0);
          }
      };
    };
    F.line = 438;
    F.filename = "core.nim";
    arrangeOverlaySqueezedRange__buju_u554(l_p0, squeezedRangeBegin_536871463, ((c_p1.childOffset + c_p1.childCount) >>> 0), offset_536871461, needSize_536871462);
    result_536871457 = (offset_536871461 + needSize_536871462);
  framePtr = F.prev;

  return result_536871457;

}

function arrangeOverlaySqueezedRange__buju_u622(l_p0, squeezedRangeBegin_p2, arrangeRangeEnd_p3, offset_p4, space_p5) {
  var F = {procname: "arrangeOverlaySqueezedRange.arrangeOverlaySqueezedRange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 397;
      F.filename = "core.nim";
      var idx_536871543 = 0;
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872477 = squeezedRangeBegin_p2;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872477 < arrangeRangeEnd_p3)) break Label3;
            F.line = 397;
            F.filename = "core.nim";
            idx_536871543 = res_536872477;
            F.line = 398;
            var child_536871544 = l_p0.caches[chckIndx(idx_536871543, 0, (l_p0.caches).length - 1)].node;
            F.line = 399;
            var minSize_536871547 = max__system_u1196(0.0, ((space_p5 - child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)]) - child_536871544.margin.arr[chckIndx(3, 0, (child_536871544.margin.arr).length - 1)]));
            F.line = 400;
            if (            axisAnchorFlags__buju_u486(child_536871544) == 5            ){              F.line = 402;
              child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)] = minSize_536871547;
              }
            else if (            axisAnchorFlags__buju_u486(child_536871544) == 1            ){              F.line = 404;
              child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)] = min__system_u1163(child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)], minSize_536871547);
              }
            else if (            axisAnchorFlags__buju_u486(child_536871544) == 4            ){              F.line = 406;
              child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)] = min__system_u1163(child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)], minSize_536871547);
              F.line = 407;
              child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)] = ((space_p5 - child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)]) - child_536871544.margin.arr[chckIndx(3, 0, (child_536871544.margin.arr).length - 1)]);
              }
            else{
              F.line = 409;
              child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)] = min__system_u1163(child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)], minSize_536871547);
              F.line = 411;
              child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)] = (child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)] + max__system_u1196(0.0, (((space_p5 - child_536871544.computed.arr[chckIndx(3, 0, (child_536871544.computed.arr).length - 1)]) / 2.0) - child_536871544.margin.arr[chckIndx(3, 0, (child_536871544.margin.arr).length - 1)])));
              }
            F.line = 413;
            child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)] = (child_536871544.computed.arr[chckIndx(1, 0, (child_536871544.computed.arr).length - 1)] + offset_p4);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872477 = ((res_536872477 + 1) >>> 0);
          }
      };
    };
  framePtr = F.prev;

  
}

function arrangeWrappedOverlaySqueezed__buju_u608(l_p0, c_p1) {
  var result_536871525 = 0.0;

  var F = {procname: "arrangeWrappedOverlaySqueezed.arrangeWrappedOverlaySqueezed", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 418;
    F.filename = "core.nim";
    F.line = 420;
    var n_536871527 = c_p1.node;
    F.line = 422;
    var offset_536871529 = n_536871527.computed.arr[chckIndx(1, 0, (n_536871527.computed.arr).length - 1)];
    F.line = 423;
    var needSize_536871530 = 0.0;
    F.line = 425;
    var squeezedRangeBegin_536871531 = c_p1.childOffset;
    Label1: {
      F.line = 427;
      var idx_536871532 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872473 = 0;
      F.line = 427;
      F.filename = "core.nim";
      colontmp__536872473 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872474 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872474 < colontmp__536872473)) break Label3;
            F.line = 427;
            F.filename = "core.nim";
            idx_536871532 = res_536872474;
            F.line = 428;
            var child_536871533 = l_p0.caches[chckIndx(idx_536871532, 0, (l_p0.caches).length - 1)].node;
            if (child_536871533.isBreak) {
            F.line = 430;
            arrangeOverlaySqueezedRange__buju_u622(l_p0, squeezedRangeBegin_536871531, idx_536871532, offset_536871529, needSize_536871530);
            F.line = 431;
            offset_536871529 = (offset_536871529 + needSize_536871530);
            F.line = 432;
            squeezedRangeBegin_536871531 = idx_536871532;
            F.line = 433;
            needSize_536871530 = 0.0;
            }
            
            F.line = 435;
            var childSize_536871571 = ((child_536871533.computed.arr[chckIndx(1, 0, (child_536871533.computed.arr).length - 1)] + child_536871533.computed.arr[chckIndx(3, 0, (child_536871533.computed.arr).length - 1)]) + child_536871533.margin.arr[chckIndx(3, 0, (child_536871533.margin.arr).length - 1)]);
            F.line = 436;
            needSize_536871530 = max__system_u1192(needSize_536871530, childSize_536871571);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872474 = ((res_536872474 + 1) >>> 0);
          }
      };
    };
    F.line = 438;
    F.filename = "core.nim";
    arrangeOverlaySqueezedRange__buju_u622(l_p0, squeezedRangeBegin_536871531, ((c_p1.childOffset + c_p1.childCount) >>> 0), offset_536871529, needSize_536871530);
    result_536871525 = (offset_536871529 + needSize_536871530);
  framePtr = F.prev;

  return result_536871525;

}

function arrangeStacked__buju_u668(l_p0, c_p1) {
  var F = {procname: "arrangeStacked.arrangeStacked", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "core.nim";
    var n_536871588 = c_p1.node;
    F.line = 246;
    var computed_536871589 = nimCopy(null, n_536871588.computed, NTI671089030);
    F.line = 247;
    var space_536871591 = computed_536871589.arr[chckIndx(2, 0, (computed_536871589.arr).length - 1)];
    F.line = 249;
    var arrangeRangeBegin_536871592 = c_p1.childOffset;
    F.line = 250;
    var arrangeRangeEnd_536871593 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
    F.line = 253;
    var maxX2_536871595 = (computed_536871589.arr[chckIndx(0, 0, (computed_536871589.arr).length - 1)] + space_536871591);
    Label1: {
      F.line = 255;
        Label2: while (true) {
        if (!!((arrangeRangeBegin_536871592 == arrangeRangeEnd_536871593))) break Label2;
          F.line = 256;
          var used_536871596 = 0.0;
          F.line = 259;
          var count_536871597 = 0;
          F.line = 262;
          var squeezedCount_536871598 = 0;
          F.line = 263;
          var total_536871599 = 0;
          F.line = 264;
          var itemCount_536871600 = 0;
          F.line = 266;
          var expandRangeEnd_536871601 = arrangeRangeEnd_536871593;
          Label3: {
            F.line = 269;
            var idx_536871602 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872481 = arrangeRangeBegin_536871592;
            Label4: {
              F.line = 138;
                Label5: while (true) {
                if (!(res_536872481 < arrangeRangeEnd_536871593)) break Label5;
                  F.line = 269;
                  F.filename = "core.nim";
                  idx_536871602 = res_536872481;
                  F.line = 270;
                  var child_536871603 = l_p0.caches[chckIndx(idx_536871602, 0, (l_p0.caches).length - 1)].node;
                  F.line = 272;
                  itemCount_536871600 = addInt(itemCount_536871600, 1);
                  F.line = 273;
                  var extend_536871611 = ((used_536871596 + child_536871603.computed.arr[chckIndx(0, 0, (child_536871603.computed.arr).length - 1)]) + child_536871603.margin.arr[chckIndx(2, 0, (child_536871603.margin.arr).length - 1)]);
                  if ((axisAnchorFlags__buju_u568(child_536871603) == 5)) {
                  F.line = 276;
                  count_536871597 = addInt(count_536871597, 1);
                  }
                  else {
                    if ((child_536871603.size.arr[chckIndx(0, 0, (child_536871603.size.arr).length - 1)] <= 0.0)) {
                    F.line = 279;
                    squeezedCount_536871598 = addInt(squeezedCount_536871598, 1);
                    }
                    
                    F.line = 280;
                    extend_536871611 = (extend_536871611 + child_536871603.computed.arr[chckIndx(2, 0, (child_536871603.computed.arr).length - 1)]);
                  }
                  
                  if (((0 < total_536871599) && (space_536871591 < extend_536871611))) {
                  F.line = 285;
                  expandRangeEnd_536871601 = idx_536871602;
                  F.line = 288;
                  child_536871603.isBreak = true;
                  F.line = 289;
                  itemCount_536871600 = 0;
                  F.line = 290;
                  break Label3;
                  }
                  
                  F.line = 292;
                  total_536871599 = addInt(total_536871599, 1);
                  F.line = 293;
                  used_536871596 = extend_536871611;
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872481 = ((res_536872481 + 1) >>> 0);
                }
            };
          };
          F.line = 295;
          F.filename = "core.nim";
          var extraSpace_536871633 = (space_536871591 - used_536871596);
          F.line = 296;
          var filler_536871634 = 0.0;
          F.line = 297;
          var spacer_536871635 = 0.0;
          F.line = 298;
          var extraMargin_536871636 = 0.0;
          F.line = 299;
          var eater_536871637 = 0.0;
          if ((0.0 < extraSpace_536871633)) {
          if ((0 < count_536871597)) {
          F.line = 303;
          filler_536871634 = (extraSpace_536871633 / count_536871597);
          }
          else {
          if ((0 < total_536871599)) {
          F.line = 305;
          if (          (n_536871588.boxFlags & 24) == 24          ){            if ((false || ((0 < itemCount_536871600) || !((expandRangeEnd_536871601 == arrangeRangeEnd_536871593))))) {
            F.line = 309;
            if (            (n_536871588.boxFlags & 120) == 56            ){              F.line = 311;
              spacer_536871635 = (extraSpace_536871633 / total_536871599);
              F.line = 312;
              extraMargin_536871636 = (spacer_536871635 / 2.0);
              }
            else if (            (n_536871588.boxFlags & 120) == 88            ){              F.line = 314;
              spacer_536871635 = (extraSpace_536871633 / addInt(total_536871599, 1));
              F.line = 315;
              extraMargin_536871636 = spacer_536871635;
              }
            else{
              F.line = 318;
              spacer_536871635 = (extraSpace_536871633 / subInt(total_536871599, 1));
              }
            }
            
            }
          else if (          (n_536871588.boxFlags & 24) == 8          ){            }
          else if (          (n_536871588.boxFlags & 24) == 16          ){            F.line = 322;
            extraMargin_536871636 = extraSpace_536871633;
            }
          else{
            F.line = 324;
            extraMargin_536871636 = (extraSpace_536871633 / 2.0);
            }
          }
          }
          }
          else {
          }
          
          F.line = 331;
          var x_536871639 = [computed_536871589.arr[chckIndx(0, 0, (computed_536871589.arr).length - 1)]];
          F.line = 332;
          var x1_536871640 = 0.0;
          Label6: {
            F.line = 335;
            var idx_536871641 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872484 = arrangeRangeBegin_536871592;
            Label7: {
              F.line = 138;
                Label8: while (true) {
                if (!(res_536872484 < expandRangeEnd_536871601)) break Label8;
                  F.line = 335;
                  F.filename = "core.nim";
                  idx_536871641 = res_536872484;
                  F.line = 336;
                  var child_536871642 = l_p0.caches[chckIndx(idx_536871641, 0, (l_p0.caches).length - 1)].node;
                  F.line = 338;
                  HEX2BHEX3D__buju_u523(x_536871639, 0, (child_536871642.computed.arr[chckIndx(0, 0, (child_536871642.computed.arr).length - 1)] + extraMargin_536871636));
                  if ((axisAnchorFlags__buju_u568(child_536871642) == 5)) {
                  F.line = 341;
                  x1_536871640 = (x_536871639[0] + filler_536871634);
                  }
                  else {
                  if ((0.0 < child_536871642.size.arr[chckIndx(0, 0, (child_536871642.size.arr).length - 1)])) {
                  F.line = 343;
                  x1_536871640 = (x_536871639[0] + child_536871642.computed.arr[chckIndx(2, 0, (child_536871642.computed.arr).length - 1)]);
                  }
                  else {
                    F.line = 346;
                    x1_536871640 = (x_536871639[0] + max__system_u1192(0.0, (child_536871642.computed.arr[chckIndx(2, 0, (child_536871642.computed.arr).length - 1)] + eater_536871637)));
                  }
                  }
                  F.line = 348;
                  var ix0_536871655 = x_536871639[0];
                  F.line = 349;
                  var ix1_536871657 = min__system_u1159((maxX2_536871595 - child_536871642.margin.arr[chckIndx(2, 0, (child_536871642.margin.arr).length - 1)]), x1_536871640);
                  F.line = 355;
                  child_536871642.computed.arr[chckIndx(0, 0, (child_536871642.computed.arr).length - 1)] = ix0_536871655;
                  F.line = 356;
                  child_536871642.computed.arr[chckIndx(2, 0, (child_536871642.computed.arr).length - 1)] = (ix1_536871657 - ix0_536871655);
                  F.line = 358;
                  extraMargin_536871636 = spacer_536871635;
                  F.line = 359;
                  x_536871639[0] = (x1_536871640 + child_536871642.margin.arr[chckIndx(2, 0, (child_536871642.margin.arr).length - 1)]);
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872484 = ((res_536872484 + 1) >>> 0);
                }
            };
          };
          F.line = 361;
          F.filename = "core.nim";
          arrangeRangeBegin_536871592 = expandRangeEnd_536871601;
        }
    };
  framePtr = F.prev;

  
}

function arrangeStacked__buju_u749(l_p0, c_p1) {
  var F = {procname: "arrangeStacked.arrangeStacked", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "core.nim";
    var n_536871669 = c_p1.node;
    F.line = 246;
    var computed_536871670 = nimCopy(null, n_536871669.computed, NTI671089030);
    F.line = 247;
    var space_536871672 = computed_536871670.arr[chckIndx(2, 0, (computed_536871670.arr).length - 1)];
    F.line = 249;
    var arrangeRangeBegin_536871673 = c_p1.childOffset;
    F.line = 250;
    var arrangeRangeEnd_536871674 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
    Label1: {
      F.line = 255;
        Label2: while (true) {
        if (!!((arrangeRangeBegin_536871673 == arrangeRangeEnd_536871674))) break Label2;
          F.line = 256;
          var used_536871675 = 0.0;
          F.line = 259;
          var count_536871676 = 0;
          F.line = 262;
          var squeezedCount_536871677 = 0;
          F.line = 263;
          var total_536871678 = 0;
          F.line = 264;
          var itemCount_536871679 = 0;
          F.line = 266;
          var expandRangeEnd_536871680 = arrangeRangeEnd_536871674;
          Label3: {
            F.line = 269;
            var idx_536871681 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872488 = arrangeRangeBegin_536871673;
            Label4: {
              F.line = 138;
                Label5: while (true) {
                if (!(res_536872488 < arrangeRangeEnd_536871674)) break Label5;
                  F.line = 269;
                  F.filename = "core.nim";
                  idx_536871681 = res_536872488;
                  F.line = 270;
                  var child_536871682 = l_p0.caches[chckIndx(idx_536871681, 0, (l_p0.caches).length - 1)].node;
                  F.line = 272;
                  itemCount_536871679 = addInt(itemCount_536871679, 1);
                  F.line = 273;
                  var extend_536871690 = ((used_536871675 + child_536871682.computed.arr[chckIndx(0, 0, (child_536871682.computed.arr).length - 1)]) + child_536871682.margin.arr[chckIndx(2, 0, (child_536871682.margin.arr).length - 1)]);
                  if ((axisAnchorFlags__buju_u568(child_536871682) == 5)) {
                  F.line = 276;
                  count_536871676 = addInt(count_536871676, 1);
                  }
                  else {
                    if ((child_536871682.size.arr[chckIndx(0, 0, (child_536871682.size.arr).length - 1)] <= 0.0)) {
                    F.line = 279;
                    squeezedCount_536871677 = addInt(squeezedCount_536871677, 1);
                    }
                    
                    F.line = 280;
                    extend_536871690 = (extend_536871690 + child_536871682.computed.arr[chckIndx(2, 0, (child_536871682.computed.arr).length - 1)]);
                  }
                  
                  F.line = 292;
                  total_536871678 = addInt(total_536871678, 1);
                  F.line = 293;
                  used_536871675 = extend_536871690;
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872488 = ((res_536872488 + 1) >>> 0);
                }
            };
          };
          F.line = 295;
          F.filename = "core.nim";
          var extraSpace_536871712 = (space_536871672 - used_536871675);
          F.line = 296;
          var filler_536871713 = 0.0;
          F.line = 297;
          var spacer_536871714 = 0.0;
          F.line = 298;
          var extraMargin_536871715 = 0.0;
          F.line = 299;
          var eater_536871716 = 0.0;
          if ((0.0 < extraSpace_536871712)) {
          if ((0 < count_536871676)) {
          F.line = 303;
          filler_536871713 = (extraSpace_536871712 / count_536871676);
          }
          else {
          if ((0 < total_536871678)) {
          F.line = 305;
          if (          (n_536871669.boxFlags & 24) == 24          ){            if ((true || ((0 < itemCount_536871679) || !((expandRangeEnd_536871680 == arrangeRangeEnd_536871674))))) {
            F.line = 309;
            if (            (n_536871669.boxFlags & 120) == 56            ){              F.line = 311;
              spacer_536871714 = (extraSpace_536871712 / total_536871678);
              F.line = 312;
              extraMargin_536871715 = (spacer_536871714 / 2.0);
              }
            else if (            (n_536871669.boxFlags & 120) == 88            ){              F.line = 314;
              spacer_536871714 = (extraSpace_536871712 / addInt(total_536871678, 1));
              F.line = 315;
              extraMargin_536871715 = spacer_536871714;
              }
            else{
              F.line = 318;
              spacer_536871714 = (extraSpace_536871712 / subInt(total_536871678, 1));
              }
            }
            
            }
          else if (          (n_536871669.boxFlags & 24) == 8          ){            }
          else if (          (n_536871669.boxFlags & 24) == 16          ){            F.line = 322;
            extraMargin_536871715 = extraSpace_536871712;
            }
          else{
            F.line = 324;
            extraMargin_536871715 = (extraSpace_536871712 / 2.0);
            }
          }
          }
          }
          else {
            if (((extraSpace_536871712 < 0.0) && (0 < squeezedCount_536871677))) {
            F.line = 328;
            eater_536871716 = (extraSpace_536871712 / squeezedCount_536871677);
            }
            
          }
          
          F.line = 331;
          var x_536871718 = [computed_536871670.arr[chckIndx(0, 0, (computed_536871670.arr).length - 1)]];
          F.line = 332;
          var x1_536871719 = 0.0;
          Label6: {
            F.line = 335;
            var idx_536871720 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872491 = arrangeRangeBegin_536871673;
            Label7: {
              F.line = 138;
                Label8: while (true) {
                if (!(res_536872491 < expandRangeEnd_536871680)) break Label8;
                  F.line = 335;
                  F.filename = "core.nim";
                  idx_536871720 = res_536872491;
                  F.line = 336;
                  var child_536871721 = l_p0.caches[chckIndx(idx_536871720, 0, (l_p0.caches).length - 1)].node;
                  F.line = 338;
                  HEX2BHEX3D__buju_u523(x_536871718, 0, (child_536871721.computed.arr[chckIndx(0, 0, (child_536871721.computed.arr).length - 1)] + extraMargin_536871715));
                  if ((axisAnchorFlags__buju_u568(child_536871721) == 5)) {
                  F.line = 341;
                  x1_536871719 = (x_536871718[0] + filler_536871713);
                  }
                  else {
                  if ((0.0 < child_536871721.size.arr[chckIndx(0, 0, (child_536871721.size.arr).length - 1)])) {
                  F.line = 343;
                  x1_536871719 = (x_536871718[0] + child_536871721.computed.arr[chckIndx(2, 0, (child_536871721.computed.arr).length - 1)]);
                  }
                  else {
                    F.line = 346;
                    x1_536871719 = (x_536871718[0] + max__system_u1192(0.0, (child_536871721.computed.arr[chckIndx(2, 0, (child_536871721.computed.arr).length - 1)] + eater_536871716)));
                  }
                  }
                  F.line = 348;
                  var ix0_536871734 = x_536871718[0];
                  F.line = 349;
                  var ix1_536871735 = x1_536871719;
                  F.line = 355;
                  child_536871721.computed.arr[chckIndx(0, 0, (child_536871721.computed.arr).length - 1)] = ix0_536871734;
                  F.line = 356;
                  child_536871721.computed.arr[chckIndx(2, 0, (child_536871721.computed.arr).length - 1)] = (ix1_536871735 - ix0_536871734);
                  F.line = 358;
                  extraMargin_536871715 = spacer_536871714;
                  F.line = 359;
                  x_536871718[0] = (x1_536871719 + child_536871721.margin.arr[chckIndx(2, 0, (child_536871721.margin.arr).length - 1)]);
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872491 = ((res_536872491 + 1) >>> 0);
                }
            };
          };
          F.line = 361;
          F.filename = "core.nim";
          arrangeRangeBegin_536871673 = expandRangeEnd_536871680;
        }
    };
  framePtr = F.prev;

  
}

function arrangeOverlay__buju_u837(l_p0, c_p1) {
  var F = {procname: "arrangeOverlay.arrangeOverlay", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "core.nim";
    var n_536871755 = c_p1.node;
    F.line = 369;
    var offset_536871757 = n_536871755.computed.arr[chckIndx(0, 0, (n_536871755.computed.arr).length - 1)];
    F.line = 370;
    var space_536871759 = n_536871755.computed.arr[chckIndx(2, 0, (n_536871755.computed.arr).length - 1)];
    Label1: {
      F.line = 372;
      var idx_536871760 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872494 = 0;
      F.line = 372;
      F.filename = "core.nim";
      colontmp__536872494 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872495 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872495 < colontmp__536872494)) break Label3;
            F.line = 372;
            F.filename = "core.nim";
            idx_536871760 = res_536872495;
            F.line = 373;
            var child_536871761 = l_p0.caches[chckIndx(idx_536871760, 0, (l_p0.caches).length - 1)].node;
            F.line = 374;
            if (            axisAnchorFlags__buju_u568(child_536871761) == 5            ){              F.line = 376;
              child_536871761.computed.arr[chckIndx(2, 0, (child_536871761.computed.arr).length - 1)] = max__system_u1192(0.0, ((space_536871759 - child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)]) - child_536871761.margin.arr[chckIndx(2, 0, (child_536871761.margin.arr).length - 1)]));
              }
            else if (            axisAnchorFlags__buju_u568(child_536871761) == 4            ){              F.line = 379;
              child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] = ((((child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] + space_536871759) - child_536871761.computed.arr[chckIndx(2, 0, (child_536871761.computed.arr).length - 1)]) - child_536871761.margin.arr[chckIndx(0, 0, (child_536871761.margin.arr).length - 1)]) - child_536871761.margin.arr[chckIndx(2, 0, (child_536871761.margin.arr).length - 1)]);
              }
            else if (            axisAnchorFlags__buju_u568(child_536871761) == 1            ){              }
            else{
              F.line = 385;
              child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] = (child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] + max__system_u1192(0.0, (((space_536871759 - child_536871761.computed.arr[chckIndx(2, 0, (child_536871761.computed.arr).length - 1)]) / 2.0) - child_536871761.margin.arr[chckIndx(2, 0, (child_536871761.margin.arr).length - 1)])));
              }
            F.line = 387;
            child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] = (child_536871761.computed.arr[chckIndx(0, 0, (child_536871761.computed.arr).length - 1)] + offset_536871757);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872495 = ((res_536872495 + 1) >>> 0);
          }
      };
    };
  framePtr = F.prev;

  
}

function arrange__buju_u442(l_p0, c_p1) {
  var F = {procname: "arrange.arrange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "core.nim";
    var n_536871360 = c_p1.node;
    F.line = 450;
    if (    model__buju_u120(n_536871360) == 7    ){      if (false) {
      if (!(n_536871360.isSkipXAxis)) {
      F.line = 453;
      failedAssertImpl__stdZassertions_u81([47,114,111,111,116,47,114,101,112,111,115,47,98,117,106,117,47,115,114,99,47,98,117,106,117,47,99,111,114,101,46,110,105,109,40,52,53,51,44,32,55,41,32,96,110,46,105,115,83,107,105,112,88,65,120,105,115,96,32]);
      }
      
      F.line = 456;
      arrangeStacked__buju_u454(l_p0, c_p1);
      F.line = 457;
      var offset_536871517 = arrangeWrappedOverlaySqueezed__buju_u540(l_p0, c_p1);
      F.line = 458;
      n_536871360.computed.arr[chckIndx(2, 0, (n_536871360.computed.arr).length - 1)] = (offset_536871517 - n_536871360.computed.arr[chckIndx(0, 0, (n_536871360.computed.arr).length - 1)]);
      }
      
      }
    else if (    model__buju_u120(n_536871360) == 6    ){      if (false) {
      F.line = 461;
      (arrangeWrappedOverlaySqueezed__buju_u608(l_p0, c_p1));
      }
      else {
        F.line = 463;
      arrangeStacked__buju_u668(l_p0, c_p1);
      }
      
      }
    else if (    model__buju_u120(n_536871360) == 3 || 
    model__buju_u120(n_536871360) == 2    ){      if ((direction__buju_u123(n_536871360) == 0)) {
      F.line = 466;
      arrangeStacked__buju_u749(l_p0, c_p1);
      }
      else {
        F.line = 468;
      arrangeOverlaySqueezedRange__buju_u554(l_p0, c_p1.childOffset, ((c_p1.childOffset + c_p1.childCount) >>> 0), n_536871360.computed.arr[chckIndx(0, 0, (n_536871360.computed.arr).length - 1)], n_536871360.computed.arr[chckIndx(2, 0, (n_536871360.computed.arr).length - 1)]);
      }
      
      }
    else{
      F.line = 476;
      arrangeOverlay__buju_u837(l_p0, c_p1);
      }
  framePtr = F.prev;

  
}

function arrange__buju_u425(l_p0) {
  var F = {procname: "arrange.arrange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 479;
      F.filename = "core.nim";
      var idx_536871348 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__536872455 = 0;
      F.line = 479;
      F.filename = "core.nim";
      colontmp__536872455 = (l_p0.caches).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536872456 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_536872456 < colontmp__536872455)) break Label3;
            F.line = 479;
            F.filename = "core.nim";
            idx_536871348 = i_536872456;
            F.line = 480;
            var c_536871352 = l_p0.caches[chckIndx(idx_536871348, 0, (l_p0.caches).length - 1)];
            F.line = 481;
            var n_536871353 = c_536871352.node;
            if (!(n_536871353.isSkipXAxis)) {
            F.line = 485;
            arrange__buju_u442(l_p0, c_536871352);
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536872456 = addInt(i_536872456, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function calcStackedSize__buju_u892(l_p0, c_p1) {
  var result_536871809 = 0.0;

  var F = {procname: "calcStackedSize.calcStackedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 132;
    F.filename = "core.nim";
    F.line = 134;
    var needSize_536871811 = 0.0;
    Label1: {
      F.line = 136;
      var idx_536871812 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872500 = 0;
      F.line = 136;
      F.filename = "core.nim";
      colontmp__536872500 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872501 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872501 < colontmp__536872500)) break Label3;
            F.line = 136;
            F.filename = "core.nim";
            idx_536871812 = res_536872501;
            F.line = 137;
            var child_536871813 = l_p0.caches[chckIndx(idx_536871812, 0, (l_p0.caches).length - 1)].node;
            F.line = 138;
            var size_536871817 = ((child_536871813.computed.arr[chckIndx(1, 0, (child_536871813.computed.arr).length - 1)] + child_536871813.computed.arr[chckIndx(3, 0, (child_536871813.computed.arr).length - 1)]) + child_536871813.margin.arr[chckIndx(3, 0, (child_536871813.margin.arr).length - 1)]);
            F.line = 139;
            needSize_536871811 = (needSize_536871811 + size_536871817);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872501 = ((res_536872501 + 1) >>> 0);
          }
      };
    };
    result_536871809 = needSize_536871811;
  framePtr = F.prev;

  return result_536871809;

}

function calcWrappedOverlayedSize__buju_u906(l_p0, c_p1) {
  var result_536871823 = 0.0;

  var F = {procname: "calcWrappedOverlayedSize.calcWrappedOverlayedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 158;
    F.filename = "core.nim";
    F.line = 160;
    var needSize_536871825 = 0.0;
    F.line = 161;
    var needSize2_536871826 = 0.0;
    Label1: {
      F.line = 163;
      var idx_536871827 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872504 = 0;
      F.line = 163;
      F.filename = "core.nim";
      colontmp__536872504 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872505 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872505 < colontmp__536872504)) break Label3;
            F.line = 163;
            F.filename = "core.nim";
            idx_536871827 = res_536872505;
            F.line = 164;
            var child_536871828 = l_p0.caches[chckIndx(idx_536871827, 0, (l_p0.caches).length - 1)].node;
            if (child_536871828.isBreak) {
            F.line = 166;
            needSize2_536871826 = (needSize2_536871826 + needSize_536871825);
            F.line = 167;
            needSize_536871825 = 0.0;
            }
            
            F.line = 168;
            var size_536871832 = ((child_536871828.computed.arr[chckIndx(1, 0, (child_536871828.computed.arr).length - 1)] + child_536871828.computed.arr[chckIndx(3, 0, (child_536871828.computed.arr).length - 1)]) + child_536871828.margin.arr[chckIndx(3, 0, (child_536871828.margin.arr).length - 1)]);
            F.line = 169;
            needSize_536871825 = max__system_u1192(needSize_536871825, size_536871832);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872505 = ((res_536872505 + 1) >>> 0);
          }
      };
    };
    result_536871823 = (needSize_536871825 + needSize2_536871826);
  framePtr = F.prev;

  return result_536871823;

}

function calcOverlayedSize__buju_u926(l_p0, c_p1) {
  var result_536871843 = 0.0;

  var F = {procname: "calcOverlayedSize.calcOverlayedSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 145;
    F.filename = "core.nim";
    F.line = 147;
    var needSize_536871845 = 0.0;
    Label1: {
      F.line = 149;
      var idx_536871846 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872508 = 0;
      F.line = 149;
      F.filename = "core.nim";
      colontmp__536872508 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872509 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872509 < colontmp__536872508)) break Label3;
            F.line = 149;
            F.filename = "core.nim";
            idx_536871846 = res_536872509;
            F.line = 150;
            var child_536871847 = l_p0.caches[chckIndx(idx_536871846, 0, (l_p0.caches).length - 1)].node;
            F.line = 151;
            var size_536871851 = ((child_536871847.computed.arr[chckIndx(1, 0, (child_536871847.computed.arr).length - 1)] + child_536871847.computed.arr[chckIndx(3, 0, (child_536871847.computed.arr).length - 1)]) + child_536871847.margin.arr[chckIndx(3, 0, (child_536871847.margin.arr).length - 1)]);
            F.line = 152;
            needSize_536871845 = max__system_u1192(size_536871851, needSize_536871845);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872509 = ((res_536872509 + 1) >>> 0);
          }
      };
    };
    result_536871843 = needSize_536871845;
  framePtr = F.prev;

  return result_536871843;

}

function calcSize__buju_u868(l_p0) {
            var Temporary4;
              var Temporary5;

  var F = {procname: "calcSize.calcSize", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 194;
    F.filename = "core.nim";
    var idx_536871788 = (l_p0.caches).length;
    Label1: {
      F.line = 195;
        Label2: while (true) {
        if (!(0 < idx_536871788)) break Label2;
          Label3: {
            F.line = 196;
            idx_536871788 = subInt(idx_536871788, 1);
            F.line = 198;
            var c_536871797 = l_p0.caches[chckIndx(idx_536871788, 0, (l_p0.caches).length - 1)];
            F.line = 199;
            var n_536871798 = c_536871797.node;
            F.line = 202;
            n_536871798.computed.arr[chckIndx(1, 0, (n_536871798.computed.arr).length - 1)] = n_536871798.margin.arr[chckIndx(1, 0, (n_536871798.margin.arr).length - 1)];
            if ((0.0 < n_536871798.size.arr[chckIndx(1, 0, (n_536871798.size.arr).length - 1)])) {
            F.line = 207;
            n_536871798.computed.arr[chckIndx(3, 0, (n_536871798.computed.arr).length - 1)] = n_536871798.size.arr[chckIndx(1, 0, (n_536871798.size.arr).length - 1)];
            F.line = 208;
            break Label3;
            }
            
            F.line = 211;
            F.line = 212;
            if (            model__buju_u120(n_536871798) == 7            ){              Temporary4 = calcStackedSize__buju_u892(l_p0, c_536871797);
              }
            else if (            model__buju_u120(n_536871798) == 6            ){              Temporary4 = calcWrappedOverlayedSize__buju_u906(l_p0, c_536871797);
              }
            else if (            model__buju_u120(n_536871798) == 3 || 
            model__buju_u120(n_536871798) == 2            ){              if ((direction__buju_u123(n_536871798) == 1)) {
              Temporary5 = calcStackedSize__buju_u892(l_p0, c_536871797);
              }
              else {
              Temporary5 = calcOverlayedSize__buju_u926(l_p0, c_536871797);
              }
              
              Temporary4 = Temporary5;
              }
            else{
              Temporary4 = calcOverlayedSize__buju_u926(l_p0, c_536871797);
              }
            var needSize_536871857 = Temporary4;
            F.line = 237;
            n_536871798.computed.arr[chckIndx(3, 0, (n_536871798.computed.arr).length - 1)] = needSize_536871857;
          };
        }
    };
  framePtr = F.prev;

  
}

function arrangeStacked__buju_u1003(l_p0, c_p1) {
  var F = {procname: "arrangeStacked.arrangeStacked", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "core.nim";
    var n_536871923 = c_p1.node;
    F.line = 246;
    var computed_536871924 = nimCopy(null, n_536871923.computed, NTI671089030);
    F.line = 247;
    var space_536871926 = computed_536871924.arr[chckIndx(3, 0, (computed_536871924.arr).length - 1)];
    F.line = 249;
    var arrangeRangeBegin_536871927 = c_p1.childOffset;
    F.line = 250;
    var arrangeRangeEnd_536871928 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
    Label1: {
      F.line = 255;
        Label2: while (true) {
        if (!!((arrangeRangeBegin_536871927 == arrangeRangeEnd_536871928))) break Label2;
          F.line = 256;
          var used_536871929 = 0.0;
          F.line = 259;
          var count_536871930 = 0;
          F.line = 262;
          var squeezedCount_536871931 = 0;
          F.line = 263;
          var total_536871932 = 0;
          F.line = 264;
          var itemCount_536871933 = 0;
          F.line = 266;
          var expandRangeEnd_536871934 = arrangeRangeEnd_536871928;
          Label3: {
            F.line = 269;
            var idx_536871935 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872517 = arrangeRangeBegin_536871927;
            Label4: {
              F.line = 138;
                Label5: while (true) {
                if (!(res_536872517 < arrangeRangeEnd_536871928)) break Label5;
                  F.line = 269;
                  F.filename = "core.nim";
                  idx_536871935 = res_536872517;
                  F.line = 270;
                  var child_536871936 = l_p0.caches[chckIndx(idx_536871935, 0, (l_p0.caches).length - 1)].node;
                  F.line = 272;
                  itemCount_536871933 = addInt(itemCount_536871933, 1);
                  F.line = 273;
                  var extend_536871944 = ((used_536871929 + child_536871936.computed.arr[chckIndx(1, 0, (child_536871936.computed.arr).length - 1)]) + child_536871936.margin.arr[chckIndx(3, 0, (child_536871936.margin.arr).length - 1)]);
                  if ((axisAnchorFlags__buju_u486(child_536871936) == 5)) {
                  F.line = 276;
                  count_536871930 = addInt(count_536871930, 1);
                  }
                  else {
                    if ((child_536871936.size.arr[chckIndx(1, 0, (child_536871936.size.arr).length - 1)] <= 0.0)) {
                    F.line = 279;
                    squeezedCount_536871931 = addInt(squeezedCount_536871931, 1);
                    }
                    
                    F.line = 280;
                    extend_536871944 = (extend_536871944 + child_536871936.computed.arr[chckIndx(3, 0, (child_536871936.computed.arr).length - 1)]);
                  }
                  
                  F.line = 292;
                  total_536871932 = addInt(total_536871932, 1);
                  F.line = 293;
                  used_536871929 = extend_536871944;
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872517 = ((res_536872517 + 1) >>> 0);
                }
            };
          };
          F.line = 295;
          F.filename = "core.nim";
          var extraSpace_536871966 = (space_536871926 - used_536871929);
          F.line = 296;
          var filler_536871967 = 0.0;
          F.line = 297;
          var spacer_536871968 = 0.0;
          F.line = 298;
          var extraMargin_536871969 = 0.0;
          F.line = 299;
          var eater_536871970 = 0.0;
          if ((0.0 < extraSpace_536871966)) {
          if ((0 < count_536871930)) {
          F.line = 303;
          filler_536871967 = (extraSpace_536871966 / count_536871930);
          }
          else {
          if ((0 < total_536871932)) {
          F.line = 305;
          if (          (n_536871923.boxFlags & 24) == 24          ){            if ((true || ((0 < itemCount_536871933) || !((expandRangeEnd_536871934 == arrangeRangeEnd_536871928))))) {
            F.line = 309;
            if (            (n_536871923.boxFlags & 120) == 56            ){              F.line = 311;
              spacer_536871968 = (extraSpace_536871966 / total_536871932);
              F.line = 312;
              extraMargin_536871969 = (spacer_536871968 / 2.0);
              }
            else if (            (n_536871923.boxFlags & 120) == 88            ){              F.line = 314;
              spacer_536871968 = (extraSpace_536871966 / addInt(total_536871932, 1));
              F.line = 315;
              extraMargin_536871969 = spacer_536871968;
              }
            else{
              F.line = 318;
              spacer_536871968 = (extraSpace_536871966 / subInt(total_536871932, 1));
              }
            }
            
            }
          else if (          (n_536871923.boxFlags & 24) == 8          ){            }
          else if (          (n_536871923.boxFlags & 24) == 16          ){            F.line = 322;
            extraMargin_536871969 = extraSpace_536871966;
            }
          else{
            F.line = 324;
            extraMargin_536871969 = (extraSpace_536871966 / 2.0);
            }
          }
          }
          }
          else {
            if (((extraSpace_536871966 < 0.0) && (0 < squeezedCount_536871931))) {
            F.line = 328;
            eater_536871970 = (extraSpace_536871966 / squeezedCount_536871931);
            }
            
          }
          
          F.line = 331;
          var x_536871972 = [computed_536871924.arr[chckIndx(1, 0, (computed_536871924.arr).length - 1)]];
          F.line = 332;
          var x1_536871973 = 0.0;
          Label6: {
            F.line = 335;
            var idx_536871974 = 0;
            F.line = 137;
            F.filename = "iterators_1.nim";
            var res_536872520 = arrangeRangeBegin_536871927;
            Label7: {
              F.line = 138;
                Label8: while (true) {
                if (!(res_536872520 < expandRangeEnd_536871934)) break Label8;
                  F.line = 335;
                  F.filename = "core.nim";
                  idx_536871974 = res_536872520;
                  F.line = 336;
                  var child_536871975 = l_p0.caches[chckIndx(idx_536871974, 0, (l_p0.caches).length - 1)].node;
                  F.line = 338;
                  HEX2BHEX3D__buju_u523(x_536871972, 0, (child_536871975.computed.arr[chckIndx(1, 0, (child_536871975.computed.arr).length - 1)] + extraMargin_536871969));
                  if ((axisAnchorFlags__buju_u486(child_536871975) == 5)) {
                  F.line = 341;
                  x1_536871973 = (x_536871972[0] + filler_536871967);
                  }
                  else {
                  if ((0.0 < child_536871975.size.arr[chckIndx(1, 0, (child_536871975.size.arr).length - 1)])) {
                  F.line = 343;
                  x1_536871973 = (x_536871972[0] + child_536871975.computed.arr[chckIndx(3, 0, (child_536871975.computed.arr).length - 1)]);
                  }
                  else {
                    F.line = 346;
                    x1_536871973 = (x_536871972[0] + max__system_u1192(0.0, (child_536871975.computed.arr[chckIndx(3, 0, (child_536871975.computed.arr).length - 1)] + eater_536871970)));
                  }
                  }
                  F.line = 348;
                  var ix0_536871988 = x_536871972[0];
                  F.line = 349;
                  var ix1_536871989 = x1_536871973;
                  F.line = 355;
                  child_536871975.computed.arr[chckIndx(1, 0, (child_536871975.computed.arr).length - 1)] = ix0_536871988;
                  F.line = 356;
                  child_536871975.computed.arr[chckIndx(3, 0, (child_536871975.computed.arr).length - 1)] = (ix1_536871989 - ix0_536871988);
                  F.line = 358;
                  extraMargin_536871969 = spacer_536871968;
                  F.line = 359;
                  x_536871972[0] = (x1_536871973 + child_536871975.margin.arr[chckIndx(3, 0, (child_536871975.margin.arr).length - 1)]);
                  F.line = 140;
                  F.filename = "iterators_1.nim";
                  res_536872520 = ((res_536872520 + 1) >>> 0);
                }
            };
          };
          F.line = 361;
          F.filename = "core.nim";
          arrangeRangeBegin_536871927 = expandRangeEnd_536871934;
        }
    };
  framePtr = F.prev;

  
}

function arrangeOverlay__buju_u1091(l_p0, c_p1) {
  var F = {procname: "arrangeOverlay.arrangeOverlay", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "core.nim";
    var n_536872009 = c_p1.node;
    F.line = 369;
    var offset_536872011 = n_536872009.computed.arr[chckIndx(1, 0, (n_536872009.computed.arr).length - 1)];
    F.line = 370;
    var space_536872013 = n_536872009.computed.arr[chckIndx(3, 0, (n_536872009.computed.arr).length - 1)];
    Label1: {
      F.line = 372;
      var idx_536872014 = 0;
      F.line = 134;
      F.filename = "iterators_1.nim";
      var colontmp__536872523 = 0;
      F.line = 372;
      F.filename = "core.nim";
      colontmp__536872523 = ((c_p1.childOffset + c_p1.childCount) >>> 0);
      F.line = 137;
      F.filename = "iterators_1.nim";
      var res_536872524 = c_p1.childOffset;
      Label2: {
        F.line = 138;
          Label3: while (true) {
          if (!(res_536872524 < colontmp__536872523)) break Label3;
            F.line = 372;
            F.filename = "core.nim";
            idx_536872014 = res_536872524;
            F.line = 373;
            var child_536872015 = l_p0.caches[chckIndx(idx_536872014, 0, (l_p0.caches).length - 1)].node;
            F.line = 374;
            if (            axisAnchorFlags__buju_u486(child_536872015) == 5            ){              F.line = 376;
              child_536872015.computed.arr[chckIndx(3, 0, (child_536872015.computed.arr).length - 1)] = max__system_u1192(0.0, ((space_536872013 - child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)]) - child_536872015.margin.arr[chckIndx(3, 0, (child_536872015.margin.arr).length - 1)]));
              }
            else if (            axisAnchorFlags__buju_u486(child_536872015) == 4            ){              F.line = 379;
              child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] = ((((child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] + space_536872013) - child_536872015.computed.arr[chckIndx(3, 0, (child_536872015.computed.arr).length - 1)]) - child_536872015.margin.arr[chckIndx(1, 0, (child_536872015.margin.arr).length - 1)]) - child_536872015.margin.arr[chckIndx(3, 0, (child_536872015.margin.arr).length - 1)]);
              }
            else if (            axisAnchorFlags__buju_u486(child_536872015) == 1            ){              }
            else{
              F.line = 385;
              child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] = (child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] + max__system_u1192(0.0, (((space_536872013 - child_536872015.computed.arr[chckIndx(3, 0, (child_536872015.computed.arr).length - 1)]) / 2.0) - child_536872015.margin.arr[chckIndx(3, 0, (child_536872015.margin.arr).length - 1)])));
              }
            F.line = 387;
            child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] = (child_536872015.computed.arr[chckIndx(1, 0, (child_536872015.computed.arr).length - 1)] + offset_536872011);
            F.line = 140;
            F.filename = "iterators_1.nim";
            res_536872524 = ((res_536872524 + 1) >>> 0);
          }
      };
    };
  framePtr = F.prev;

  
}

function arrange__buju_u964(l_p0, c_p1) {
  var F = {procname: "arrange.arrange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 448;
    F.filename = "core.nim";
    var n_536871882 = c_p1.node;
    F.line = 450;
    if (    model__buju_u120(n_536871882) == 7    ){      if (true) {
      if (!(n_536871882.isSkipXAxis)) {
      F.line = 453;
      failedAssertImpl__stdZassertions_u81([47,114,111,111,116,47,114,101,112,111,115,47,98,117,106,117,47,115,114,99,47,98,117,106,117,47,99,111,114,101,46,110,105,109,40,52,53,51,44,32,55,41,32,96,110,46,105,115,83,107,105,112,88,65,120,105,115,96,32]);
      }
      
      F.line = 456;
      arrangeStacked__buju_u454(l_p0, c_p1);
      F.line = 457;
      var offset_536871900 = arrangeWrappedOverlaySqueezed__buju_u540(l_p0, c_p1);
      F.line = 458;
      n_536871882.computed.arr[chckIndx(2, 0, (n_536871882.computed.arr).length - 1)] = (offset_536871900 - n_536871882.computed.arr[chckIndx(0, 0, (n_536871882.computed.arr).length - 1)]);
      }
      
      }
    else if (    model__buju_u120(n_536871882) == 6    ){      if (true) {
      F.line = 461;
      (arrangeWrappedOverlaySqueezed__buju_u608(l_p0, c_p1));
      }
      else {
        F.line = 463;
      arrangeStacked__buju_u668(l_p0, c_p1);
      }
      
      }
    else if (    model__buju_u120(n_536871882) == 3 || 
    model__buju_u120(n_536871882) == 2    ){      if ((direction__buju_u123(n_536871882) == 1)) {
      F.line = 466;
      arrangeStacked__buju_u1003(l_p0, c_p1);
      }
      else {
        F.line = 468;
      arrangeOverlaySqueezedRange__buju_u622(l_p0, c_p1.childOffset, ((c_p1.childOffset + c_p1.childCount) >>> 0), n_536871882.computed.arr[chckIndx(1, 0, (n_536871882.computed.arr).length - 1)], n_536871882.computed.arr[chckIndx(3, 0, (n_536871882.computed.arr).length - 1)]);
      }
      
      }
    else{
      F.line = 476;
      arrangeOverlay__buju_u1091(l_p0, c_p1);
      }
  framePtr = F.prev;

  
}

function arrange__buju_u947(l_p0) {
  var F = {procname: "arrange.arrange", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 479;
      F.filename = "core.nim";
      var idx_536871870 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__536872512 = 0;
      F.line = 479;
      F.filename = "core.nim";
      colontmp__536872512 = (l_p0.caches).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_536872513 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_536872513 < colontmp__536872512)) break Label3;
            F.line = 479;
            F.filename = "core.nim";
            idx_536871870 = i_536872513;
            F.line = 480;
            var c_536871874 = l_p0.caches[chckIndx(idx_536871870, 0, (l_p0.caches).length - 1)];
            F.line = 481;
            var n_536871875 = c_536871874.node;
            F.line = 487;
            arrange__buju_u964(l_p0, c_536871874);
            if (n_536871875.isSkipXAxis) {
            F.line = 490;
            arrange__buju_u442(l_p0, c_536871874);
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_536872513 = addInt(i_536872513, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function compute__buju_u292(l_p0, n_p1) {
  var F = {procname: "buju.compute", prev: framePtr, filename: "/root/repos/buju/src/buju/core.nim", line: 0};
  framePtr = F;
    F.line = 493;
    F.filename = "core.nim";
    n_p1.isSkipXAxis = false;
    F.line = 495;
    l_p0.caches.push({node: n_p1, childOffset: 0, childCount: 0});;
    F.line = 497;
    var idx_536871211 = 0;
    Label1: {
      F.line = 501;
        Label2: while (true) {
        if (!(idx_536871211 < (l_p0.caches).length)) break Label2;
          F.line = 502;
          var n_536871216 = l_p0.caches[chckIndx(idx_536871211, 0, (l_p0.caches).length - 1)].node;
          F.line = 503;
          var childOffset_536871220 = Number(BigInt.asUintN(32, BigInt((l_p0.caches).length)));
          if ((model__buju_u120(n_536871216) == 7)) {
          F.line = 507;
          n_536871216.isSkipXAxis = true;
          }
          
          F.line = 509;
          n_536871216.isBreak = false;
          F.line = 511;
          var count_536871221 = 0;
          F.line = 512;
          var isSkipXAxis_536871222 = n_536871216.isSkipXAxis;
          Label3: {
            F.line = 514;
            var child_536871223 = null;
            F.line = 123;
            var nodeID_536872436 = n_536871216.firstChild;
            Label4: {
              F.line = 124;
                Label5: while (true) {
                if (!!(isNil__buju_u93(nodeID_536872436))) break Label5;
                  F.line = 125;
                  var n_536872438 = node__buju_u100(l_p0, nodeID_536872436);
                  F.line = 126;
                  nodeID_536872436 = n_536872438.nextSibling;
                  F.line = 514;
                  child_536871223 = n_536872438;
                  F.line = 515;
                  count_536871221 = addInt(count_536871221, 1);
                  F.line = 517;
                  child_536871223.isSkipXAxis = isSkipXAxis_536871222;
                  F.line = 518;
                  l_p0.caches.push({node: child_536871223, childOffset: 0, childCount: 0});;
                }
            };
          };
          F.line = 520;
          var c_536871233 = l_p0.caches[chckIndx(idx_536871211, 0, (l_p0.caches).length - 1)];
          F.line = 521;
          c_536871233.childOffset = childOffset_536871220;
          F.line = 522;
          c_536871233.childCount = Number(BigInt.asUintN(32, BigInt(count_536871221)));
          F.line = 524;
          idx_536871211 = addInt(idx_536871211, 1);
        }
    };
    F.line = 527;
    calcSize__buju_u329(l_p0);
    F.line = 528;
    arrange__buju_u425(l_p0);
    F.line = 527;
    calcSize__buju_u868(l_p0);
    F.line = 528;
    arrange__buju_u947(l_p0);
    F.line = 533;
    if (l_p0.caches.length < 0) { for (var i = l_p0.caches.length ; i < 0 ; ++i) l_p0.caches.push(({node: null, childOffset: 0, childCount: 0})); }
               else { l_p0.caches.length = 0; };
  framePtr = F.prev;

  
}

function compute(l_p0, nodeID_p1) {
  var F = {procname: "buju.compute", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 239;
    F.filename = "buju.nim";
    var l_536872397 = l_p0;
    F.line = 240;
    var n_536872398 = node__buju_u100(l_536872397, nodeID_p1);
    F.line = 242;
    compute__buju_u292(l_536872397, n_536872398);
  framePtr = F.prev;

  
}

function computed(l_p0, nodeID_p1) {
  var result_536872402 = ({arr: new Float32Array(4)});

  var F = {procname: "buju.computed", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
  framePtr = F;
    F.line = 245;
    F.filename = "buju.nim";
    F.line = 252;
    var l_536872415 = l_p0;
    F.line = 253;
    var n_536872416 = node__buju_u100(l_536872415, nodeID_p1);
    result_536872402 = nimCopy(result_536872402, n_536872416.computed, NTI671089030);
  framePtr = F.prev;

  return result_536872402;

}
var F = {procname: "module buju", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module buju", prev: framePtr, filename: "/root/repos/buju/src/buju.nim", line: 0};
framePtr = F;
framePtr = F.prev;
